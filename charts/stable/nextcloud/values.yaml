image:
  repository: tccr.io/truecharts/nextcloud
  pullPolicy: IfNotPresent
  tag: v24.0.2@sha256:74fc870ce76d9923bea528a80e179cb5678f0a412dc3687fe8ba3c48a6212db7

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 33

service:
  main:
    ports:
      main:
        port: 10020
        targetPort: 80
  hpb:
    enabled: true
    ports:
      hpb:
        enabled: true
        port: 7867
        targetPort: 7867
secretEnv:
  NEXTCLOUD_ADMIN_USER: "admin"
  NEXTCLOUD_ADMIN_PASSWORD: "adminpass"

initContainers:
  datadir:
    image: "{{ .Values.alpineImage.repository }}:{{ .Values.alpineImage.tag }}"
    securityContext:
      runAsUser: 0
      privileged: true
    command:
      - "/bin/sh"
      - "-c"
      - |
        /bin/bash <<'EOF'
        echo "Enforcing chmod 770 on data-dir..."
        chmod 770 /var/www/html/data
        echo "Migrating old data when found..."
        EOF

    volumeMounts:
      - name: data
        mountPath: "/data"
      - name: html
        mountPath: "/html"

env:
  TRUSTED_PROXIES: "172.16.0.0/16"
  POSTGRES_DB: "{{ .Values.postgresql.postgresqlDatabase }}"
  POSTGRES_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  POSTGRES_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  POSTGRES_HOST:
    secretKeyRef:
      name: dbcreds
      key: plainporthost
  REDIS_HOST:
    secretKeyRef:
      name: rediscreds
      key: plainhost
  REDIS_HOST_PASSWORD:
    secretKeyRef:
      name: rediscreds
      key: redis-password

envFrom:
  - configMapRef:
      name: nextcloudconfig

persistence:
  html:
    enabled: true
    mountPath: "/var/www/html"
  data:
    enabled: true
    mountPath: "/var/www/html/data"

probes:
  liveness:
    custom: true
    spec:
      httpGet:
        path: /status.php
        port: 80
        httpHeaders:
        - name: Host
          value: "test.fakedomain.dns"

  readiness:
    custom: true
    spec:
      httpGet:
        path: /status.php
        port: 80
        httpHeaders:
        - name: Host
          value: "test.fakedomain.dns"

  startup:
    custom: true
    spec:
      httpGet:
        path: /status.php
        port: 80
        httpHeaders:
        - name: Host
          value: "test.fakedomain.dns"

cronjob:
  schedule: "*/5 * * * *"
  annotations: {}
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 2

postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: nextcloud
  postgresqlDatabase: nextcloud

redis:
  enabled: true
  existingSecret: "rediscreds"
